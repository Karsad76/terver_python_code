"""
Задача 1 Даны значения величины заработной платы заемщиков банка (zp) и
значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
1.1 Найдите ковариацию этих двух величин с помощью элементарных действий, а
затем с помощью функции cov из numpy. Полученные значения должны быть равны.
1.2 Найдите коэффициент корреляции Пирсона с помощью ковариации и
среднеквадратичных отклонений двух признаков, а затем с использованием функций
из библиотек numpy и pandas.
"""

import numpy as np

# исходные данные
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

# считаем ковариацию по формуле
cov = ((zp - zp.mean()) * (ks - ks.mean())).sum() / (len(ks) - 1)
print(f"cov = {cov}, D(zp) = {zp.var(ddof=1)}, D(ks) = {ks.var(ddof=1)}")
# OUT: cov = 10175.37777777778
#      D(zp) = 3882.9333333333334
#      D(ks) = 33854.32222222223

# считаем ковариацию функцией numpy
print(np.cov(zp, ks, ddof=1))
# OUT: [[ 3882.93333333 10175.37777778]
#      [10175.37777778 33854.32222222]]

# считаем коэффициент Пирсона
print(cov / (np.std(zp, ddof=1) * np.std(ks, ddof=1)))
# OUT: 0.8874900920739164

print(np.corrcoef(zp, ks))
# OUT: [[1.         0.88749009]
#      [0.88749009 1.        ]]
